/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | LGUI ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI [    |
// | CTRL TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '        |
// | LALT     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RCTRL ]   |
//   | LOWER BSPC | SHIFT SPACE | RAISE ENT |   | RAISE ENT | SHIFT SPACE  | LOWER DEL |
                        bindings = <
   &mt LGUI ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt RGUI LBKT
   &mt LCTRL TAB  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LALT       &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RCTRL RBKT
   &lt LOWER BSPC  &mt LSHIFT SPACE &lt RAISE ENTER &lt RAISE ENTER &mt RSHIFT SPACE &lt LOWER DEL
                        >;
                };
                lower_layer {
// --------------------------------------------------------------------------------------------
// | F1     | F2   | F3 | F4   | F5   | F6    |   | F7    | F8   | F9   | F10  | F11  | F12   |
// | &trans | EXCL | AT | HASH | DLLR | PRCNT |   | CARET | AMPS | STAR | LPAR | RPAR | UNDER |
// | &trans | N1   | N2 | N3   | N4   | N5    |   | N6    | N7   | N8   | N9   | N0   | INS   |
//                 | &trans | &trans | &trans |   | &trans | &trans | &trans |
                        bindings = <
   &kp F1  &kp F2   &kp F3 &kp F4   &kp F5    &kp F6      &kp F7    &kp F8   &kp F9   &kp F10   &kp F11   &kp F12
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR  &kp UNDER
   &trans  &kp N1   &kp N2 &kp N3   &kp N4    &kp N5      &kp N6    &kp N7   &kp N8   &kp N9    &kp N0    &kp INS
                            &trans   &trans    &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
// ------------------------------------------------------------------------------------------------------------------
// | GRAVE   | KP_SLASH    | KP_N7 | KP_N8 | KP_N9 | KP_MINUS |   | KP_EQUAL | HOME | UP    | PG_UP | C_PREV | LGUI  |
// | &trans  | KP_ASTERISK | KP_N4 | KP_N5 | KP_N6 | KP_PLUS  |   | C_VOL_UP | LEFT | DOWN  | RIGHT | C_PP   | BSLH  |
// | KP_NLCK | KP_N0       | KP_N1 | KP_N2 | KP_N3 | KP_DOT   |   | C_VOL_DN | END  | PSCRN | PG_DN | C_NEXT | RCTRL |
//                                 | &trans | &trans | &trans |   | &trans | &trans | &trans |
                        bindings = <
   &kp GRAVE   &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp KP_EQUAL  &kp HOME  &kp UP    &kp PG_UP  &kp C_PREV  &kp LGUI
   &trans      &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_VOL_UP  &kp LEFT  &kp DOWN  &kp RIGHT  &kp C_PP    &kp BSLH
   &kp KP_NLCK &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp PSCRN &kp PG_DN  &kp C_NEXT  &kp RCTRL
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | BT_CLR | BT_SEL 0 | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 | BT_SEL 4 |   |    |    |    |    |    |     |
// |        |          |          |          |          |          |   |    |    |    |    |    |     |
// |        |          |          |          |          |          |   |    |    |    |    |    |     |
//                                                        |  |  |  |   |  |  |  |
                        bindings = <
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans &trans &trans &trans &trans &trans
   &trans      &trans        &trans        &trans        &trans        &trans          &trans &trans &trans &trans &trans &trans
   &trans      &trans        &trans        &trans        &trans        &trans          &trans &trans &trans &trans &trans &trans
                    	                     &trans        &trans        &trans          &trans &trans &trans
                        >;
                };
        };
};
